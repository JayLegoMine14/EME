@page
@Html.AntiForgeryToken()
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div id="MasterCarousel" class="carousel slide" data-interval="false">
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img class="position-absolute text-center absolute-center" style="top:7%;height:170px;width:auto" src="~/images/logo.png">
            <h5 class="position-absolute text-center absolute-center eme-black-text" style="width:100%;top:33%;">investigate your social media and online presence</h5>
            <div class="card text-center position-absolute absolute-center" style="top:42%;width: 40rem;">
                <div class="card-body eme-white">
                    <div class="form-row">
                        <div class="col">
                            <input type="text" id="FirstName" class="form-control" placeholder="First name">
                        </div>
                        <div class="col">
                            <input type="text" id="MiddleName" class="form-control" placeholder="Middle name (optional)">
                        </div>
                        <div class="col">
                            <input type="text" id="LastName" class="form-control" placeholder="Last name">
                        </div>
                    </div>
                    <div class="form-row mt-2 w-100" style="margin: 0;">
                        <div id="Photos" class="dropzone w-100"></div>
                    </div>
                    <br />
                    <button id="FindMe" type="submit" class="btn btn-dark btn-lg">Find Me</button>
                </div>
            </div>
            <div id="particles-js" class="eme-red" style="width:100%;height:100%;"></div>
        </div>
        <div class="carousel-item eme-red">
            <img class="position-absolute text-center absolute-center" style="top:30%;width:150px;height:auto" src="~/images/Ripple-0.8s-200px.gif">
            <h4 class="position-absolute text-center absolute-center eme-white-text" style="width:100%;top:55%;">
                <span id="content-1">Scouring the wide web...</span>
                <span id="content-2">Finding interesting stuff...</span>
                <span id="content-3">Incentivising the coder monkeys...</span>
                <span id="content-4">Ohhh, look at that...</span>
                <span id="content-5">Hmmm...</span>
            </h4>
        </div>
        <div class="carousel-item eme-red p-3 pb-5" style="overflow-y: auto">
            
            <div id="Results" class="card-columns" style="padding-bottom: 50px">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-12">
                                <h3>How you are perceived online:</h3>
                            </div>
                            <div class="col-12">
                                <div id="chart_div"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    AOS.init();
    $(".carousel-item").on("scroll", function () {
        AOS.refresh();
    });
    particlesJS("particles-js", { "particles": { "number": { "value": 183, "density": { "enable": true, "value_area": 1042.21783956259 } }, "color": { "value": "#EEE0CB" }, "shape": { "type": "circle", "stroke": { "width": 0, "color": "#000000" }, "polygon": { "nb_sides": 3 }, "image": { "src": "img/github.svg", "width": 100, "height": 100 } }, "opacity": { "value": 0.1683582663908799, "random": false, "anim": { "enable": false, "speed": 0.7, "opacity_min": 0.1, "sync": false } }, "size": { "value": 12.02559045649142, "random": true, "anim": { "enable": false, "speed": 40, "size_min": 0.1, "sync": false } }, "line_linked": { "enable": true, "distance": 112.2388442605866, "color": "EEE0CB", "opacity": 0.4, "width": 2.0844356791251797 }, "move": { "enable": true, "speed": 4, "direction": "top-right", "random": true, "straight": false, "out_mode": "out", "bounce": false, "attract": { "enable": true, "rotateX": 600, "rotateY": 1200 } } }, "interactivity": { "detect_on": "canvas", "events": { "onhover": { "enable": true, "mode": "grab" }, "onclick": { "enable": true, "mode": "push" }, "resize": true }, "modes": { "grab": { "distance": 207.079689136843, "line_linked": { "opacity": 1 } }, "bubble": { "distance": 400, "size": 40, "duration": 2, "opacity": 8, "speed": 3 }, "repulse": { "distance": 200, "duration": 0.4 }, "push": { "particles_nb": 4 }, "remove": { "particles_nb": 2 } } }, "retina_detect": true });
    var imageUpload;
    var sentiments = [];

    Dropzone.autoDiscover = false;
    imageUpload = new Dropzone("div#Photos", {
        paramName: "file",
        resizeWidth: 1000,
        url: "/Request/Upload",
        acceptedFiles: "image/*",
        withCredentials: true,
        autoProcessQueue: false,
        parallelUploads: 5,
        maxFiles: 5,
        uploadMultiple: true,
        dictDefaultMessage: "Drop or click to upload images to help us find you",
        headers: {
            'XSRF-TOKEN': $('input:hidden[name="__RequestVerificationToken"]').val()
        },
        params: function () {
            return {
                "name": JSON.stringify({
                    first: $("#FirstName").val(),
                    middle: $("#MiddleName").val(),
                    last: $("#LastName").val()
                })
            }
        },
        success: function (file, response) {
            var r = response;

            var total = 50;

            var images = r[0];
            var pars = r[1];

            var col1 = [];
            var col2 = [];
            var col3 = [];
            var currentColumn = 2;

            while (col1.length + col2.length + col3.length < total && (pars.length > 0 || images.length > 0)) {
                if (pars.length > 0) {
                    var end = Math.floor(Math.random() * 2);
                    for (var i = 0; i <= end && pars.length > 0; i++) {
                        if (currentColumn == 1) col1.push(pars.shift());
                        if (currentColumn == 2) col2.push(pars.shift());
                        if (currentColumn == 3) col3.push(pars.shift());
                        currentColumn++;
                        if (currentColumn == 4) currentColumn = 1;
                    }
                }
                if (images.length > 0) {
                    var end = Math.floor(Math.random() * 2);
                    for (var i = 0; i <= end && images.length > 0; i++) {
                        if (currentColumn == 1) col1.push(images.shift());
                        if (currentColumn == 2) col2.push(images.shift());
                        if (currentColumn == 3) col3.push(images.shift());
                        currentColumn++;
                        if (currentColumn == 4) currentColumn = 1;
                    }
                }
            }

            col2 = col2.concat(col3);
            col1 = col1.concat(col2);

            col1.forEach(function (item) {
                var card = "";

                if (item["text"] != null) {
                    if (sentiments[item.sentimentString] == null) {
                        sentiments[item.sentimentString] = 1;
                    } else {
                        sentiments[item.sentimentString] = sentiments[item.sentimentString] + 1;
                    }
                }

                var confidenceRep = "";
                for (var i = 0; i < (Math.floor(item.confidence * 2) + 2) && i < 5; i++) confidenceRep += " &bull;"; 

                card += '<div class="card" data-aos-anchor-placement="top-bottom">';
                if (item["imageUrl"] != null)
                    card += '        <img class="card-img-top" src="' + item.imageUrl + '">';
                card += '    <div class="card-body">';
                card += '            <h6 class="card-title">Content from: <a href="' + item.webpage.url + '">' + item.webpage.title + '</a></h6>';
                if (item["text"] != null) {
                    card += '            <p class="card-text">"' + item.text.replace(RegExp(item.name, 'gi'), '<strong>$&</strong>') + '"</p>';
                    card += '            <p class="card-text"><small class="text-muted">Sentiment: <span class="' + (item.sentiment > 0 ? "text-success" : "text-danger") + '">' + item.sentimentString + '</span></small></p>';
                }
                card += '            <p class="card-text"><small class="text-muted"><strong>Confidence:</strong><span class="text-success">' + confidenceRep + '</span></small></p>'
                card += '    </div>';
                card += '    <div class="card-img-overlay" style="pointer-events: none;">';
                card += '       <span class="float-right"><i class="fas fa-lg fa-arrow-' + (item.sentiment > 0 ? "up text-success" : "down text-danger") + '"></i></span>';
                card += '   </div>';
                card += '</div>';

                $("#Results").append(card);
            });

            drawChart();
            $("#MasterCarousel").carousel('next');
        }
    });

    var divs = $('span[id^="content-"]').hide(), i = 0;

    (function cycle() {

        divs.eq(i).fadeIn(400)
            .delay(4000)
            .fadeOut(400, cycle);

        i = ++i % divs.length;
    })();

    $("#FindMe").click(function () {
        if (validate()) {
            $("#MasterCarousel").carousel('next');
            imageUpload.processQueue();
        }
    });

    function validate() {
        var hasError = false;

        $("#FirstName").removeClass("is-invalid");
        $("#LastName").removeClass("is-invalid");

        if ($("#FirstName").val().length == 0) {
            $("#FirstName").addClass("is-invalid");
            hasError = true;
        }

        if ($("#LastName").val().length == 0) {
            $("#LastName").addClass("is-invalid");
            hasError = true;
        }

        if (imageUpload.files.length == 0) {
            $.alert({
                title: 'One Image Required',
                content: 'Please upload at least one image.',
                type: 'red',
                columnClass: "col-sm-6"
            });
            hasError = true;
        }

        return !hasError;
    }
</script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart'] });

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Sentiment');
        data.addColumn('number', 'Instances');

        var values = [];
        var color = [];

        for (var key in sentiments) {
            if (sentiments.hasOwnProperty(key)) {

                if (key.indexOf("Positive") > -1) color.push("#28a745")
                else if (key.indexOf("Negative") > -1) color.push("#dc3545")
                else if (key.indexOf("Neutral") > -1) color.push("#6c757d")
                else if (key.indexOf("Mixed") > -1) color.push("#ffc107")

                values.push([key, sentiments[key]]);
            }
        }

        data.addRows(values);

        // Set chart options
        var options = {
            'width': 300,
            'height': 200,
            'pieHole': 0.3,
            'colors': color,
            backgroundColor: 'transparent',
            pieSliceTextStyle: { color: '#000000' },
            chartArea: { width: '90%', height: '100%' }
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }
</script>